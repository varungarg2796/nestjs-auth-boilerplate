# .env.example
# Copy this file to .env and fill in your actual values.
# Keep .env out of version control.

# --- PostgreSQL Database Connection ---
# Example for local PostgreSQL: postgresql://USER:PASSWORD@HOST:PORT/DATABASE?schema=public
# Replace with your actual database connection string.
DATABASE_URL="postgresql://postgres:admin@localhost:5432/nestjs_auth_boilerplate?schema=public"

# --- Google OAuth 2.0 Credentials ---
# Get these from your Google Cloud Platform Console (APIs & Services > Credentials)
# Ensure your Authorized redirect URI in GCP is set to: ${GOOGLE_CALLBACK_URL} (e.g., http://localhost:3000/api/auth/google/callback)
GOOGLE_CLIENT_ID=YOUR_GOOGLE_CLIENT_ID_HERE
GOOGLE_CLIENT_SECRET=YOUR_GOOGLE_CLIENT_SECRET_HERE
GOOGLE_CALLBACK_URL=http://localhost:3000/api/auth/google/callback

# --- JWT (JSON Web Token) Configuration ---
# Generate a strong, random secret key (e.g., using `openssl rand -hex 32` in your terminal)
JWT_SECRET=YOUR_SUPER_STRONG_RANDOM_JWT_SECRET_KEY_HERE
JWT_ACCESS_EXPIRATION=15m  # Access token expiration (e.g., 15m, 1h, 1d)
JWT_REFRESH_EXPIRATION=7d   # Refresh token expiration (e.g., 7d, 30d)

# --- Frontend Application URL ---
# Used for redirects after successful authentication.
# Adjust this to your frontend application's URL.
FRONTEND_BASE_URL=http://localhost:3001

# --- Server Configuration (Optional) ---
# The port your NestJS application will listen on.
# PORT=3000